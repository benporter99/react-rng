{"version":3,"sources":["RandomGenerator.js","RandomNumberGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["RandomGenerator","nextProps","this","props","clickCount","min","Number","minMax","max","randomNum","Math","floor","random","React","Component","RandomNumberGenerator","state","userMinInput","userMaxInput","userMinSubmit","userMaxSubmit","handleMinChange","bind","handleMaxChange","handleBtnClick","event","setState","target","value","type","placeholder","onChange","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA2CeA,E,2KApCX,SAAsBC,GAClB,OAAIC,KAAKC,MAAMC,aAAeH,EAAUG,a,oBAM5C,WACI,IAAMC,EAAMC,OAAOJ,KAAKC,MAAMI,OAAO,IAC/BC,EAAMF,OAAOJ,KAAKC,MAAMI,OAAO,IAErC,GAAIF,GAAOG,EACP,OACI,8BACI,yCAAYH,IAAQG,EAAM,WAAa,cAAvC,oEAGL,GAAIH,EAAM,IAAM,GAAKG,EAAM,IAAM,EACpC,OACI,8BACI,oFAKR,IAAMC,EAAYC,KAAKC,MAAOD,KAAKE,UAAYJ,EAAMH,EAAM,GAAMA,GAEjE,OACI,8BACI,4DAA+BA,EAA/B,QAAyCG,EAAzC,QAAmDC,W,GAlCzCI,IAAMC,WCoDrBC,E,kDAlDX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTC,aAAc,IACdC,aAAc,KACdC,cAAe,IACfC,cAAe,KACfhB,WAAY,GAEhB,EAAKiB,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBAXP,E,mDAcnB,SAAgBG,GACZvB,KAAKwB,SAAS,CACVT,aAAcQ,EAAME,OAAOC,U,6BAInC,SAAgBH,GACZvB,KAAKwB,SAAS,CACVR,aAAcO,EAAME,OAAOC,U,4BAInC,WACI1B,KAAKwB,SAAS,CACVP,cAAejB,KAAKc,MAAMC,aAC1BG,cAAelB,KAAKc,MAAME,aAC1Bd,WAAYF,KAAKc,MAAMZ,WAAa,M,oBAI5C,WACI,OACI,gCACI,yDACA,gHACA,uBAAOyB,KAAK,SAASC,YAAY,oBAAoBF,MAAO1B,KAAKe,aAAcc,SAAU7B,KAAKmB,kBAC9F,uBAAOQ,KAAK,SAASC,YAAY,qBAAqBF,MAAO1B,KAAKgB,aAAca,SAAU7B,KAAKqB,kBAC/F,wBAAQM,KAAK,SAASG,QAAS9B,KAAKsB,eAApC,oCACA,cAAC,EAAD,CAAiBjB,OAAQ,CAACL,KAAKc,MAAMG,cAAejB,KAAKc,MAAMI,eAAgBhB,WAAYF,KAAKc,MAAMZ,aACtG,uBACA,4BAAG,mI,GA7CiBS,IAAMC,WCQ3BmB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dad8dad4.chunk.js","sourcesContent":["import React from 'react';\n\nclass RandomGenerator extends React.Component {\n    /* constructor(props) {\n        super(props);\n    } */\n\n    shouldComponentUpdate(nextProps) {\n        if (this.props.clickCount !== nextProps.clickCount) {\n            return true;\n        }\n        return false;\n    };\n\n    render() {\n        const min = Number(this.props.minMax[0]);\n        const max = Number(this.props.minMax[1]);\n\n        if (min >= max) {\n            return (\n                <div>\n                    <h1>Min is {min === max ? \"equal to\" : \"larger than\"} max - cannot calculate random number with these boundaries.</h1>\n                </div>\n            );\n        } else if (min % 1 !== 0 || max % 1 !== 0) {\n            return (\n                <div>\n                    <h1>Sorry, you can only enter integers (for now...)!</h1>\n                </div>\n            );\n        } else {\n           \n            const randomNum = Math.floor((Math.random() * (max - min + 1)) + min)\n            \n            return (\n                <div>\n                    <h1>The random number between {min} and {max} is: {randomNum}</h1>\n                </div>\n            );\n        }\n    }\n}\n\nexport default RandomGenerator;\n","import React from 'react';\nimport RandomGenerator from './RandomGenerator';\n\nclass RandomNumberGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userMinInput: '0',\n            userMaxInput: '10',\n            userMinSubmit: '0',\n            userMaxSubmit: '10',\n            clickCount: 0,\n        }\n        this.handleMinChange = this.handleMinChange.bind(this);\n        this.handleMaxChange = this.handleMaxChange.bind(this);\n        this.handleBtnClick = this.handleBtnClick.bind(this);\n    }\n\n    handleMinChange(event) {\n        this.setState({\n            userMinInput: event.target.value\n        });\n    }\n\n    handleMaxChange(event) {\n        this.setState({\n            userMaxInput: event.target.value\n        });\n    }\n\n    handleBtnClick() {\n        this.setState({\n            userMinSubmit: this.state.userMinInput,\n            userMaxSubmit: this.state.userMaxInput,\n            clickCount: this.state.clickCount + 1\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Random Number Generator</h1>\n                <h2>Type lower and upper ranges to change the bounds for random number generation.</h2>\n                <input type=\"number\" placeholder=\"Min: default is 0\" value={this.userMinInput} onChange={this.handleMinChange}></input>\n                <input type=\"number\" placeholder=\"Max: default is 10\" value={this.userMaxInput} onChange={this.handleMaxChange}></input>\n                <button type=\"submit\" onClick={this.handleBtnClick}>Generate Random Number</button>\n                <RandomGenerator minMax={[this.state.userMinSubmit, this.state.userMaxSubmit]} clickCount={this.state.clickCount}/>\n                <hr></hr>\n                <p><strong>Created by Ben FCB Porter using the React JS framework; styling will be added later.</strong></p>\n            </div>\n        );\n    };\n};\n\nexport default RandomNumberGenerator;","import './App.css';\nimport RandomNumberGenerator from './RandomNumberGenerator';\n\nfunction App() {\n  return (\n    <div>\n      <RandomNumberGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}