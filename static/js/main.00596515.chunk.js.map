{"version":3,"sources":["RandomGenerator.js","RandomNumberGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["RandomGenerator","nextProps","this","props","clickCount","min","Number","minMax","max","randomNum","Math","floor","random","React","Component","RandomNumberGenerator","state","userMinInput","userMaxInput","userMinSubmit","userMaxSubmit","handleMinChange","bind","handleMaxChange","handleBtnClick","event","setState","target","value","type","placeholder","onChange","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAqCeA,E,2KA9BX,SAAsBC,GAClB,OAAIC,KAAKC,MAAMC,aAAeH,EAAUG,a,oBAM5C,WACI,IAAMC,EAAMC,OAAOJ,KAAKC,MAAMI,OAAO,IAC/BC,EAAMF,OAAOJ,KAAKC,MAAMI,OAAO,IAErC,GAAIF,GAAOG,EACP,OACI,8BACI,yCAAYH,IAAQG,EAAM,WAAa,cAAvC,oEAKR,IAAMC,EAAYC,KAAKC,MAAOD,KAAKE,UAAYJ,EAAMH,EAAM,GAAMA,GAEjE,OACI,8BACI,4DAA+BA,EAA/B,QAAyCG,EAAzC,QAAmDC,W,GA5BzCI,IAAMC,WCoDrBC,E,kDAlDX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTC,aAAc,IACdC,aAAc,KACdC,cAAe,IACfC,cAAe,KACfhB,WAAY,GAEhB,EAAKiB,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBAXP,E,mDAcnB,SAAgBG,GACZvB,KAAKwB,SAAS,CACVT,aAAcQ,EAAME,OAAOC,U,6BAInC,SAAgBH,GACZvB,KAAKwB,SAAS,CACVR,aAAcO,EAAME,OAAOC,U,4BAInC,WACI1B,KAAKwB,SAAS,CACVP,cAAejB,KAAKc,MAAMC,aAC1BG,cAAelB,KAAKc,MAAME,aAC1Bd,WAAYF,KAAKc,MAAMZ,WAAa,M,oBAI5C,WACI,OACI,gCACI,yDACA,gHACA,uBAAOyB,KAAK,SAASC,YAAY,oBAAoBF,MAAO1B,KAAKe,aAAcc,SAAU7B,KAAKmB,kBAC9F,uBAAOQ,KAAK,SAASC,YAAY,qBAAqBF,MAAO1B,KAAKgB,aAAca,SAAU7B,KAAKqB,kBAC/F,wBAAQM,KAAK,SAASG,QAAS9B,KAAKsB,eAApC,oCACA,cAAC,EAAD,CAAiBjB,OAAQ,CAACL,KAAKc,MAAMG,cAAejB,KAAKc,MAAMI,eAAgBhB,WAAYF,KAAKc,MAAMZ,aACtG,uBACA,4BAAG,mI,GA7CiBS,IAAMC,WCQ3BmB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00596515.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass RandomGenerator extends React.Component {\r\n    /* constructor(props) {\r\n        super(props);\r\n    } */\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if (this.props.clickCount !== nextProps.clickCount) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    render() {\r\n        const min = Number(this.props.minMax[0]);\r\n        const max = Number(this.props.minMax[1]);\r\n\r\n        if (min >= max) {\r\n            return (\r\n                <div>\r\n                    <h1>Min is {min === max ? \"equal to\" : \"larger than\"} max - cannot calculate random number with these boundaries.</h1>\r\n                </div>\r\n            )\r\n        } else {\r\n\r\n            const randomNum = Math.floor((Math.random() * (max - min + 1)) + min)\r\n\r\n            return (\r\n                <div>\r\n                    <h1>The random number between {min} and {max} is: {randomNum}</h1>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default RandomGenerator;","import React from 'react';\r\nimport RandomGenerator from './RandomGenerator';\r\n\r\nclass RandomNumberGenerator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userMinInput: '0',\r\n            userMaxInput: '10',\r\n            userMinSubmit: '0',\r\n            userMaxSubmit: '10',\r\n            clickCount: 0,\r\n        }\r\n        this.handleMinChange = this.handleMinChange.bind(this);\r\n        this.handleMaxChange = this.handleMaxChange.bind(this);\r\n        this.handleBtnClick = this.handleBtnClick.bind(this);\r\n    }\r\n\r\n    handleMinChange(event) {\r\n        this.setState({\r\n            userMinInput: event.target.value\r\n        });\r\n    }\r\n\r\n    handleMaxChange(event) {\r\n        this.setState({\r\n            userMaxInput: event.target.value\r\n        });\r\n    }\r\n\r\n    handleBtnClick() {\r\n        this.setState({\r\n            userMinSubmit: this.state.userMinInput,\r\n            userMaxSubmit: this.state.userMaxInput,\r\n            clickCount: this.state.clickCount + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Random Number Generator</h1>\r\n                <h2>Type lower and upper ranges to change the bounds for random number generation.</h2>\r\n                <input type=\"number\" placeholder=\"Min: default is 0\" value={this.userMinInput} onChange={this.handleMinChange}></input>\r\n                <input type=\"number\" placeholder=\"Max: default is 10\" value={this.userMaxInput} onChange={this.handleMaxChange}></input>\r\n                <button type=\"submit\" onClick={this.handleBtnClick}>Generate Random Number</button>\r\n                <RandomGenerator minMax={[this.state.userMinSubmit, this.state.userMaxSubmit]} clickCount={this.state.clickCount}/>\r\n                <hr></hr>\r\n                <p><strong>Created by Ben FCB Porter using the React JS framework; styling will be added later.</strong></p>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default RandomNumberGenerator;","import './App.css';\r\nimport RandomNumberGenerator from './RandomNumberGenerator';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <RandomNumberGenerator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}